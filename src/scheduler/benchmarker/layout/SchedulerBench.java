/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package scheduler.benchmarker.layout;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.JarURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLDecoder;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.DefaultTreeSelectionModel;
import javax.swing.tree.TreeSelectionModel;
import scheduler.benchmarker.manager.*;
import sun.net.www.protocol.file.FileURLConnection;

/**
 *
 * @author drordas
 */
public class SchedulerBench extends javax.swing.JFrame {

    /**
     * Creates new form SchedulerBench
     */
    private FullLoader fullLoader;
    //private SimulatorResults SimulatorDataset;
    //private SimulatorResults SimulatorResults;
    
    
    public SchedulerBench() {
        initComponents();
        fullLoader = null;
        jTabbedPane1.setEnabledAt(0, true);
        jTabbedPane1.setEnabledAt(1, false);
        jTabbedPane1.setEnabledAt(2, false);
        jTabbedPane1.setEnabledAt(3, false);
        //jTabbedPane1.getComponentAt(1).setVisible(false);
        //jTabbedPane1.getComponentAt(2).setVisible(false);
        //jTabbedPane1.getComponentAt(3).setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        showPluginsFrame = new javax.swing.JFrame();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pluginTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        pluginCloseButton = new javax.swing.JButton();
        emailsScrollPanel = new javax.swing.JScrollPane();
        emailsTable = new javax.swing.JTable();
        showRulesFrame = new javax.swing.JFrame();
        showRulesPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        rulesTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        rulesCloseButton = new javax.swing.JButton();
        schedulerTree = new javax.swing.JFrame();
        jScrollPane6 = new javax.swing.JScrollPane();
        schedulerSelected = new javax.swing.JList();
        jPanel10 = new javax.swing.JPanel();
        removeSchedButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        addSchedButton = new javax.swing.JButton();
        saveSchedButton = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        clearSchedButton = new javax.swing.JButton();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        schedulerFilter = new javax.swing.JFrame();
        schedulerList = new javax.swing.JFrame();
        jScrollPane12 = new javax.swing.JScrollPane();
        schedulerSelected1 = new javax.swing.JList();
        jScrollPane16 = new javax.swing.JScrollPane();
        allSchedulers1 = new javax.swing.JList();
        jPanel11 = new javax.swing.JPanel();
        removeSchedButton1 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        addSchedButton1 = new javax.swing.JButton();
        saveSchedButton1 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        clearSchedButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        dataSelector = new javax.swing.JPanel();
        inputDataPanel = new javax.swing.JPanel();
        lEmails = new javax.swing.JLabel();
        lRuleInf = new javax.swing.JLabel();
        bEmails = new javax.swing.JButton();
        bEvalOrder = new javax.swing.JButton();
        jFTFEmails = new javax.swing.JFormattedTextField();
        jFTFRuleInf = new javax.swing.JFormattedTextField();
        jPanel6 = new javax.swing.JPanel();
        lEvalOrder = new javax.swing.JLabel();
        bSched1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jFTESched1 = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        jFTESched2 = new javax.swing.JTextPane();
        jPanel5 = new javax.swing.JPanel();
        jFTFRequiredScore = new javax.swing.JFormattedTextField();
        lRequiredScore = new javax.swing.JLabel();
        loadButton = new javax.swing.JButton();
        outputDataPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jOutputText = new javax.swing.JTextPane();
        summaryDataPanel = new javax.swing.JPanel();
        lLoadedEmails = new javax.swing.JLabel();
        loadedEmails = new javax.swing.JTextField();
        lLoadedPlugins = new javax.swing.JLabel();
        loadedPlugins = new javax.swing.JTextField();
        showPluginsButton = new javax.swing.JButton();
        loadedRules = new javax.swing.JTextField();
        lLoadedRules = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        sched1Filter = new javax.swing.JTextField();
        sched2Filter = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        showRulesButton = new javax.swing.JButton();
        executeSimulatorPanel = new javax.swing.JPanel();
        labelCPUs = new javax.swing.JLabel();
        numCpus = new javax.swing.JComboBox();
        generatePlotsButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        emailSummaryTable = new javax.swing.JTable();
        executeBenchmarker = new javax.swing.JPanel();
        plotPanel = new javax.swing.JPanel();
        summaryPanel = new javax.swing.JPanel();
        CPUTimeConsumptionPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        totalCPUTimeConsumption = new javax.swing.JTextField();
        globalCPUTimeConsumption = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        maxCPUTimeConsumption = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        avgCPUTimeConsumption = new javax.swing.JTextField();
        cpuLocksTimeConsumption = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        minCPUTimeConsumption = new javax.swing.JTextField();
        IOTimeConsumptionPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        totalIOTimeConsumption = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        maxIOTimeConsumption = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        avgIOTimeConsumption = new javax.swing.JTextField();
        minIOTimeConsumption = new javax.swing.JTextField();
        sfeActivations = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        totalSFEActivations = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        SFEPercentage = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        totalUnexecutedRules = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        UnexecutedRulesPercentage = new javax.swing.JTextField();
        executeBenchmarker2 = new javax.swing.JPanel();
        plotPanel2 = new javax.swing.JPanel();
        summaryPanel2 = new javax.swing.JPanel();
        CPUTimeConsumptionPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        totalCPUTimeConsumption1 = new javax.swing.JTextField();
        globalCPUTimeConsumption1 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        maxCPUTimeConsumption1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        minCPUTimeConsumption1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        avgCPUTimeConsumption1 = new javax.swing.JTextField();
        cpuLocksTimeConsumption1 = new javax.swing.JTextField();
        IOTimeConsumptionPanel1 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        totalIOTimeConsumption1 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        maxIOTimeConsumption1 = new javax.swing.JTextField();
        minIOTimeConsumption1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        avgIOTimeConsumption1 = new javax.swing.JTextField();
        sfeActivations1 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        totalSFEActivations1 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        SFEPercentage1 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        totalUnexecutedRules1 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        UnexecutedRulesPercentage1 = new javax.swing.JTextField();
        comparisonBenchmarker = new javax.swing.JPanel();
        plotPanel3 = new javax.swing.JPanel();
        summaryPanel3 = new javax.swing.JPanel();
        CPUTimeConsumptionPanel2 = new javax.swing.JPanel();
        jLabelSched1 = new javax.swing.JLabel();
        jLabelSched2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        sumTotalCPUTimeConsumption = new javax.swing.JTextPane();
        jScrollPane13 = new javax.swing.JScrollPane();
        sumTotalCPUTimeConsumption1 = new javax.swing.JTextPane();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        sumTotalIOTimeConsumption = new javax.swing.JTextPane();
        jScrollPane14 = new javax.swing.JScrollPane();
        sumTotalIOTimeConsumption1 = new javax.swing.JTextPane();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        sumTotalLockTime = new javax.swing.JTextPane();
        jScrollPane15 = new javax.swing.JScrollPane();
        sumTotalLockTime1 = new javax.swing.JTextPane();
        sfeActivations2 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane19 = new javax.swing.JScrollPane();
        sumTotalSFEExecutions = new javax.swing.JTextPane();
        jScrollPane20 = new javax.swing.JScrollPane();
        sumTotalSFEExecutions1 = new javax.swing.JTextPane();
        jScrollPane21 = new javax.swing.JScrollPane();
        sumTotalUnexecutedRules = new javax.swing.JTextPane();
        jScrollPane22 = new javax.swing.JScrollPane();
        sumTotalUnexecutedRules1 = new javax.swing.JTextPane();
        jLabelSched1_1 = new javax.swing.JLabel();
        jLabelSched2_1 = new javax.swing.JLabel();
        uvigoLogo = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();

        showPluginsFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        showPluginsFrame.setTitle("Loaded Plugins");
        showPluginsFrame.setName("LOADED PLUGINS"); // NOI18N
        showPluginsFrame.setResizable(false);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        pluginTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        pluginTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        pluginTable.setFocusable(false);
        jScrollPane2.setViewportView(pluginTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pluginCloseButton.setText("Close");
        pluginCloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pluginCloseButtonActionPerformed(evt);
            }
        });
        jPanel4.add(pluginCloseButton);

        javax.swing.GroupLayout showPluginsFrameLayout = new javax.swing.GroupLayout(showPluginsFrame.getContentPane());
        showPluginsFrame.getContentPane().setLayout(showPluginsFrameLayout);
        showPluginsFrameLayout.setHorizontalGroup(
            showPluginsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showPluginsFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(showPluginsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        showPluginsFrameLayout.setVerticalGroup(
            showPluginsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, showPluginsFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        emailsScrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        emailsScrollPanel.setHorizontalScrollBar(null);

        emailsTable.setAutoCreateColumnsFromModel(false);
        emailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        emailsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        emailsTable.setRequestFocusEnabled(false);
        emailsTable.setRowSelectionAllowed(false);
        emailsScrollPanel.setViewportView(emailsTable);

        showRulesFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        showRulesFrame.setTitle("Loaded Rules");
        showRulesFrame.setName("LOADED PLUGINS"); // NOI18N
        showRulesFrame.setPreferredSize(new java.awt.Dimension(242, 360));
        showRulesFrame.setResizable(false);

        showRulesPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        showRulesPanel.setLayout(new java.awt.BorderLayout());

        rulesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        rulesTable.setFocusable(false);
        jScrollPane4.setViewportView(rulesTable);

        showRulesPanel.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        rulesCloseButton.setText("Close");
        rulesCloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rulesCloseButtonActionPerformed(evt);
            }
        });
        jPanel7.add(rulesCloseButton);

        javax.swing.GroupLayout showRulesFrameLayout = new javax.swing.GroupLayout(showRulesFrame.getContentPane());
        showRulesFrame.getContentPane().setLayout(showRulesFrameLayout);
        showRulesFrameLayout.setHorizontalGroup(
            showRulesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showRulesFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(showRulesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(showRulesFrameLayout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(showRulesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        showRulesFrameLayout.setVerticalGroup(
            showRulesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, showRulesFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showRulesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        showRulesFrame.getAccessibleContext().setAccessibleName("LoadedRules");

        schedulerTree.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        schedulerTree.setTitle("Select Schedulers");
        schedulerTree.setName("Select Scheduler"); // NOI18N
        schedulerTree.setResizable(false);

        schedulerSelected.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        schedulerSelected.setFocusable(false);
        jScrollPane6.setViewportView(schedulerSelected);

        removeSchedButton.setText("<< Delete");
        removeSchedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeSchedButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(removeSchedButton, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(removeSchedButton)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        addSchedButton.setText("Add >>");
        addSchedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSchedButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addSchedButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(addSchedButton)
                .addGap(53, 53, 53))
        );

        saveSchedButton.setText("Save");
        saveSchedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSchedButtonActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Available Schedulers");
        jLabel27.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jLabel26.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Selected Schedulers");
        jLabel26.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        clearSchedButton.setText("Clear");
        clearSchedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearSchedButtonActionPerformed(evt);
            }
        });

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.setSelectionModel(null);
        jScrollPane17.setViewportView(jTree1);

        javax.swing.GroupLayout schedulerTreeLayout = new javax.swing.GroupLayout(schedulerTree.getContentPane());
        schedulerTree.getContentPane().setLayout(schedulerTreeLayout);
        schedulerTreeLayout.setHorizontalGroup(
            schedulerTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schedulerTreeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(schedulerTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(schedulerTreeLayout.createSequentialGroup()
                        .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(schedulerTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(schedulerTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(schedulerTreeLayout.createSequentialGroup()
                                .addComponent(clearSchedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(saveSchedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(schedulerTreeLayout.createSequentialGroup()
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(135, 135, 135)
                        .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        schedulerTreeLayout.setVerticalGroup(
            schedulerTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, schedulerTreeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(schedulerTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(schedulerTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(schedulerTreeLayout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(schedulerTreeLayout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(schedulerTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveSchedButton)
                            .addComponent(clearSchedButton)))
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout schedulerFilterLayout = new javax.swing.GroupLayout(schedulerFilter.getContentPane());
        schedulerFilter.getContentPane().setLayout(schedulerFilterLayout);
        schedulerFilterLayout.setHorizontalGroup(
            schedulerFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 639, Short.MAX_VALUE)
        );
        schedulerFilterLayout.setVerticalGroup(
            schedulerFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );

        schedulerList.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        schedulerList.setTitle("Select Schedulers");
        schedulerList.setName("Select Scheduler"); // NOI18N
        schedulerList.setResizable(false);

        schedulerSelected1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        schedulerSelected1.setFocusable(false);
        jScrollPane12.setViewportView(schedulerSelected1);

        allSchedulers1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane16.setViewportView(allSchedulers1);

        removeSchedButton1.setText("<< Delete");
        removeSchedButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeSchedButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(removeSchedButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(removeSchedButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addSchedButton1.setText("Add >>");
        addSchedButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSchedButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addSchedButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(addSchedButton1)
                .addGap(53, 53, 53))
        );

        saveSchedButton1.setText("Save");
        saveSchedButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSchedButton1ActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("Available Schedulers");
        jLabel31.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jLabel35.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("Selected Schedulers");
        jLabel35.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        clearSchedButton1.setText("Clear");
        clearSchedButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearSchedButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout schedulerListLayout = new javax.swing.GroupLayout(schedulerList.getContentPane());
        schedulerList.getContentPane().setLayout(schedulerListLayout);
        schedulerListLayout.setHorizontalGroup(
            schedulerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schedulerListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(schedulerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(schedulerListLayout.createSequentialGroup()
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(schedulerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(schedulerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(schedulerListLayout.createSequentialGroup()
                                .addComponent(clearSchedButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(saveSchedButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(schedulerListLayout.createSequentialGroup()
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        schedulerListLayout.setVerticalGroup(
            schedulerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, schedulerListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(schedulerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jLabel35))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(schedulerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(schedulerListLayout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(schedulerListLayout.createSequentialGroup()
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(schedulerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveSchedButton1)
                            .addComponent(clearSchedButton1)))
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SchedulerBench");
        setName("SchedMenu"); // NOI18N
        setResizable(false);

        jTabbedPane1.setBackground(new java.awt.Color(216, 213, 210));
        jTabbedPane1.setForeground(new java.awt.Color(60, 60, 60));
        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1126, 850));

        inputDataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Input Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N

        lEmails.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        lEmails.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lEmails.setText("Emails:");
        lEmails.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lRuleInf.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        lRuleInf.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lRuleInf.setText("Rule Information:");

        bEmails.setText("Choose");
        bEmails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEmailsActionPerformed(evt);
            }
        });

        bEvalOrder.setText("Choose");
        bEvalOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEvalOrderActionPerformed(evt);
            }
        });

        jFTFEmails.setEditable(false);
        jFTFEmails.setBackground(new java.awt.Color(255, 255, 255));
        jFTFEmails.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jFTFEmails.setFocusable(false);

        jFTFRuleInf.setEditable(false);
        jFTFRuleInf.setBackground(new java.awt.Color(255, 255, 255));
        jFTFRuleInf.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jFTFRuleInf.setFocusable(false);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Select Schedulers", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N

        lEvalOrder.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        lEvalOrder.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lEvalOrder.setText("Primary Scheduler:");

        bSched1.setText("Choose");
        bSched1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSched1ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel13.setText("Secondary Scheduler:");

        jScrollPane9.setViewportView(jFTESched1);

        jScrollPane5.setViewportView(jFTESched2);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lEvalOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                    .addComponent(jScrollPane5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bSched1)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lEvalOrder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(bSched1)
                        .addGap(31, 31, 31))))
        );

        try {
            jFTFRequiredScore.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTFRequiredScore.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jFTFRequiredScore.setText("5");
        jFTFRequiredScore.setToolTipText("");

        lRequiredScore.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        lRequiredScore.setText("Required Score:");

        loadButton.setText("Load");
        loadButton.setEnabled(false);
        loadButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(114, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(lRequiredScore)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFTFRequiredScore, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(loadButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lRequiredScore)
                    .addComponent(jFTFRequiredScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout inputDataPanelLayout = new javax.swing.GroupLayout(inputDataPanel);
        inputDataPanel.setLayout(inputDataPanelLayout);
        inputDataPanelLayout.setHorizontalGroup(
            inputDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputDataPanelLayout.createSequentialGroup()
                .addGroup(inputDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputDataPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(inputDataPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(inputDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lRuleInf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lEmails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(inputDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFTFEmails)
                            .addComponent(jFTFRuleInf))
                        .addGap(18, 18, 18)
                        .addGroup(inputDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bEvalOrder, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bEmails, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        inputDataPanelLayout.setVerticalGroup(
            inputDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lEmails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bEmails)
                    .addComponent(jFTFEmails))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inputDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lRuleInf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bEvalOrder)
                    .addComponent(jFTFRuleInf))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inputDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        outputDataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Log Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N

        jOutputText.setEditable(false);
        jOutputText.setBackground(new java.awt.Color(255, 255, 255));
        jOutputText.setFocusable(false);
        jScrollPane3.setViewportView(jOutputText);

        javax.swing.GroupLayout outputDataPanelLayout = new javax.swing.GroupLayout(outputDataPanel);
        outputDataPanel.setLayout(outputDataPanelLayout);
        outputDataPanelLayout.setHorizontalGroup(
            outputDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, outputDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        outputDataPanelLayout.setVerticalGroup(
            outputDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, outputDataPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                .addContainerGap())
        );

        summaryDataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Load Overview", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N

        lLoadedEmails.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        lLoadedEmails.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lLoadedEmails.setText("Total emails loaded:");

        loadedEmails.setEditable(false);
        loadedEmails.setBackground(new java.awt.Color(255, 255, 255));
        loadedEmails.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        loadedEmails.setFocusable(false);
        loadedEmails.setMinimumSize(new java.awt.Dimension(100, 27));

        lLoadedPlugins.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        lLoadedPlugins.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lLoadedPlugins.setText("Total plugins loaded:");

        loadedPlugins.setEditable(false);
        loadedPlugins.setBackground(new java.awt.Color(255, 255, 255));
        loadedPlugins.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        loadedPlugins.setFocusable(false);
        loadedPlugins.setMinimumSize(new java.awt.Dimension(100, 27));
        loadedPlugins.setPreferredSize(new java.awt.Dimension(100, 27));

        showPluginsButton.setText("Show");
        showPluginsButton.setEnabled(false);
        showPluginsButton.setFocusable(false);
        showPluginsButton.setPreferredSize(new java.awt.Dimension(65, 29));
        showPluginsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPluginsButtonActionPerformed(evt);
            }
        });

        loadedRules.setEditable(false);
        loadedRules.setBackground(new java.awt.Color(255, 255, 255));
        loadedRules.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        loadedRules.setAutoscrolls(false);
        loadedRules.setFocusable(false);
        loadedRules.setMinimumSize(new java.awt.Dimension(100, 27));
        loadedRules.setPreferredSize(new java.awt.Dimension(100, 27));
        loadedRules.setRequestFocusEnabled(false);

        lLoadedRules.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        lLoadedRules.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lLoadedRules.setText("Total rules loaded:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Evaluated rules", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N

        sched1Filter.setEditable(false);
        sched1Filter.setBackground(new java.awt.Color(255, 255, 255));
        sched1Filter.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        sched1Filter.setFocusable(false);

        sched2Filter.setEditable(false);
        sched2Filter.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        sched2Filter.setFocusable(false);

        jLabel28.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Primary Scheduler:");

        jLabel29.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel29.setText("Secondary Scheduler:");

        showRulesButton.setText("Show");
        showRulesButton.setEnabled(false);
        showRulesButton.setFocusable(false);
        showRulesButton.setPreferredSize(new java.awt.Dimension(65, 29));
        showRulesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showRulesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sched1Filter, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sched2Filter, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(showRulesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(sched1Filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sched2Filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(showRulesButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        executeSimulatorPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Execute Simulator", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N
        executeSimulatorPanel.setFocusable(false);

        labelCPUs.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        labelCPUs.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelCPUs.setText("Number of CPUs:");
        labelCPUs.setEnabled(false);

        numCpus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Auto Detect", "1", "2", "4", "8", "16" }));
        numCpus.setEnabled(false);

        generatePlotsButton.setText("Generate Plots");
        generatePlotsButton.setEnabled(false);
        generatePlotsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatePlotsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout executeSimulatorPanelLayout = new javax.swing.GroupLayout(executeSimulatorPanel);
        executeSimulatorPanel.setLayout(executeSimulatorPanelLayout);
        executeSimulatorPanelLayout.setHorizontalGroup(
            executeSimulatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(executeSimulatorPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(labelCPUs)
                .addGap(26, 26, 26)
                .addComponent(numCpus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(generatePlotsButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        executeSimulatorPanelLayout.setVerticalGroup(
            executeSimulatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(executeSimulatorPanelLayout.createSequentialGroup()
                .addGroup(executeSimulatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numCpus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCPUs)
                    .addComponent(generatePlotsButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout summaryDataPanelLayout = new javax.swing.GroupLayout(summaryDataPanel);
        summaryDataPanel.setLayout(summaryDataPanelLayout);
        summaryDataPanelLayout.setHorizontalGroup(
            summaryDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(summaryDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(summaryDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(executeSimulatorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, summaryDataPanelLayout.createSequentialGroup()
                        .addGroup(summaryDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lLoadedPlugins, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                            .addComponent(lLoadedRules, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lLoadedEmails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(summaryDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(loadedRules, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loadedPlugins, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loadedEmails, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(showPluginsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        summaryDataPanelLayout.setVerticalGroup(
            summaryDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(summaryDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(summaryDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lLoadedEmails)
                    .addComponent(loadedEmails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(summaryDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lLoadedRules)
                    .addComponent(loadedRules, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(summaryDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lLoadedPlugins)
                    .addComponent(loadedPlugins, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showPluginsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(executeSimulatorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Summary", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N

        emailSummaryTable.setAutoCreateRowSorter(true);
        emailSummaryTable.setForeground(new java.awt.Color(76, 76, 76));
        emailSummaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        emailSummaryTable.setEnabled(false);
        emailSummaryTable.setFocusable(false);
        jScrollPane1.setViewportView(emailSummaryTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout dataSelectorLayout = new javax.swing.GroupLayout(dataSelector);
        dataSelector.setLayout(dataSelectorLayout);
        dataSelectorLayout.setHorizontalGroup(
            dataSelectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataSelectorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dataSelectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dataSelectorLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(summaryDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(outputDataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputDataPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        dataSelectorLayout.setVerticalGroup(
            dataSelectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataSelectorLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(inputDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(outputDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(dataSelectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(summaryDataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Source Selector", dataSelector);

        executeBenchmarker.setEnabled(false);
        executeBenchmarker.setRequestFocusEnabled(false);
        executeBenchmarker.setVerifyInputWhenFocusTarget(false);

        plotPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Benchmarking Plot", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N
        plotPanel.setForeground(new java.awt.Color(216, 213, 210));
        plotPanel.setPreferredSize(new java.awt.Dimension(1126, 645));

        javax.swing.GroupLayout plotPanelLayout = new javax.swing.GroupLayout(plotPanel);
        plotPanel.setLayout(plotPanelLayout);
        plotPanelLayout.setHorizontalGroup(
            plotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        plotPanelLayout.setVerticalGroup(
            plotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 622, Short.MAX_VALUE)
        );

        summaryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Summary", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N

        CPUTimeConsumptionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "CPU Time Consumption", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N
        CPUTimeConsumptionPanel.setPreferredSize(new java.awt.Dimension(360, 165));

        jLabel1.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("CPU Used/Total:");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        totalCPUTimeConsumption.setEditable(false);
        totalCPUTimeConsumption.setBackground(new java.awt.Color(255, 255, 255));
        totalCPUTimeConsumption.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        totalCPUTimeConsumption.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalCPUTimeConsumption.setFocusable(false);
        totalCPUTimeConsumption.setPreferredSize(new java.awt.Dimension(93, 28));

        globalCPUTimeConsumption.setEditable(false);
        globalCPUTimeConsumption.setBackground(new java.awt.Color(255, 255, 255));
        globalCPUTimeConsumption.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        globalCPUTimeConsumption.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        globalCPUTimeConsumption.setFocusable(false);
        globalCPUTimeConsumption.setPreferredSize(new java.awt.Dimension(93, 28));

        jLabel2.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Max/Min Time:");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        maxCPUTimeConsumption.setEditable(false);
        maxCPUTimeConsumption.setBackground(new java.awt.Color(255, 255, 255));
        maxCPUTimeConsumption.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        maxCPUTimeConsumption.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        maxCPUTimeConsumption.setFocusable(false);
        maxCPUTimeConsumption.setPreferredSize(new java.awt.Dimension(93, 28));

        jLabel4.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Average Time:");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        avgCPUTimeConsumption.setEditable(false);
        avgCPUTimeConsumption.setBackground(new java.awt.Color(255, 255, 255));
        avgCPUTimeConsumption.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        avgCPUTimeConsumption.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        avgCPUTimeConsumption.setFocusable(false);
        avgCPUTimeConsumption.setPreferredSize(new java.awt.Dimension(193, 28));

        cpuLocksTimeConsumption.setEditable(false);
        cpuLocksTimeConsumption.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cpuLocksTimeConsumption.setFocusable(false);
        cpuLocksTimeConsumption.setPreferredSize(new java.awt.Dimension(193, 27));

        jLabel30.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("CPU Locks:");
        jLabel30.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        minCPUTimeConsumption.setEditable(false);
        minCPUTimeConsumption.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        minCPUTimeConsumption.setFocusable(false);
        minCPUTimeConsumption.setPreferredSize(new java.awt.Dimension(93, 28));
        minCPUTimeConsumption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minCPUTimeConsumptionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CPUTimeConsumptionPanelLayout = new javax.swing.GroupLayout(CPUTimeConsumptionPanel);
        CPUTimeConsumptionPanel.setLayout(CPUTimeConsumptionPanelLayout);
        CPUTimeConsumptionPanelLayout.setHorizontalGroup(
            CPUTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CPUTimeConsumptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CPUTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CPUTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CPUTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CPUTimeConsumptionPanelLayout.createSequentialGroup()
                        .addGroup(CPUTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(maxCPUTimeConsumption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalCPUTimeConsumption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CPUTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(minCPUTimeConsumption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(globalCPUTimeConsumption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cpuLocksTimeConsumption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(avgCPUTimeConsumption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        CPUTimeConsumptionPanelLayout.setVerticalGroup(
            CPUTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CPUTimeConsumptionPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(CPUTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(totalCPUTimeConsumption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(globalCPUTimeConsumption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CPUTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(maxCPUTimeConsumption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minCPUTimeConsumption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CPUTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(avgCPUTimeConsumption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CPUTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpuLocksTimeConsumption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30)))
        );

        avgCPUTimeConsumption.getAccessibleContext().setAccessibleName("");

        IOTimeConsumptionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "IO Time Consumption", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N
        IOTimeConsumptionPanel.setPreferredSize(new java.awt.Dimension(360, 140));

        jLabel5.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Total Time:");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        totalIOTimeConsumption.setEditable(false);
        totalIOTimeConsumption.setBackground(new java.awt.Color(255, 255, 255));
        totalIOTimeConsumption.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        totalIOTimeConsumption.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalIOTimeConsumption.setFocusable(false);
        totalIOTimeConsumption.setPreferredSize(new java.awt.Dimension(182, 28));

        jLabel6.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Max/Min Time:");

        maxIOTimeConsumption.setEditable(false);
        maxIOTimeConsumption.setBackground(new java.awt.Color(255, 255, 255));
        maxIOTimeConsumption.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        maxIOTimeConsumption.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        maxIOTimeConsumption.setFocusable(false);
        maxIOTimeConsumption.setPreferredSize(new java.awt.Dimension(99, 28));

        jLabel7.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Average Time:");

        avgIOTimeConsumption.setEditable(false);
        avgIOTimeConsumption.setBackground(new java.awt.Color(255, 255, 255));
        avgIOTimeConsumption.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        avgIOTimeConsumption.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        avgIOTimeConsumption.setFocusable(false);
        avgIOTimeConsumption.setPreferredSize(new java.awt.Dimension(182, 28));

        minIOTimeConsumption.setEditable(false);
        minIOTimeConsumption.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        minIOTimeConsumption.setFocusable(false);
        minIOTimeConsumption.setPreferredSize(new java.awt.Dimension(99, 28));

        javax.swing.GroupLayout IOTimeConsumptionPanelLayout = new javax.swing.GroupLayout(IOTimeConsumptionPanel);
        IOTimeConsumptionPanel.setLayout(IOTimeConsumptionPanelLayout);
        IOTimeConsumptionPanelLayout.setHorizontalGroup(
            IOTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IOTimeConsumptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IOTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(IOTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6))
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IOTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(avgIOTimeConsumption, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                    .addGroup(IOTimeConsumptionPanelLayout.createSequentialGroup()
                        .addComponent(maxIOTimeConsumption, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minIOTimeConsumption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(totalIOTimeConsumption, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        IOTimeConsumptionPanelLayout.setVerticalGroup(
            IOTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IOTimeConsumptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IOTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalIOTimeConsumption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IOTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(IOTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(maxIOTimeConsumption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(minIOTimeConsumption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IOTimeConsumptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(avgIOTimeConsumption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(6, 6, 6))
        );

        sfeActivations.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Smart Filter Evaluation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N
        sfeActivations.setPreferredSize(new java.awt.Dimension(389, 165));
        sfeActivations.setRequestFocusEnabled(false);
        sfeActivations.setVerifyInputWhenFocusTarget(false);

        jLabel9.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Total SFE Executions:");

        totalSFEActivations.setEditable(false);
        totalSFEActivations.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalSFEActivations.setFocusable(false);
        totalSFEActivations.setPreferredSize(new java.awt.Dimension(188, 27));

        jLabel10.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("% SFE Executions:");

        SFEPercentage.setEditable(false);
        SFEPercentage.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        SFEPercentage.setFocusable(false);
        SFEPercentage.setPreferredSize(new java.awt.Dimension(188, 27));

        jLabel11.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Unexecuted Rules:");

        totalUnexecutedRules.setEditable(false);
        totalUnexecutedRules.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalUnexecutedRules.setFocusable(false);
        totalUnexecutedRules.setPreferredSize(new java.awt.Dimension(188, 27));

        jLabel12.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("% Unexecuted Rules:");

        UnexecutedRulesPercentage.setEditable(false);
        UnexecutedRulesPercentage.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        UnexecutedRulesPercentage.setFocusable(false);
        UnexecutedRulesPercentage.setPreferredSize(new java.awt.Dimension(188, 27));

        javax.swing.GroupLayout sfeActivationsLayout = new javax.swing.GroupLayout(sfeActivations);
        sfeActivations.setLayout(sfeActivationsLayout);
        sfeActivationsLayout.setHorizontalGroup(
            sfeActivationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sfeActivationsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sfeActivationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sfeActivationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sfeActivationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalSFEActivations, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                    .addComponent(SFEPercentage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalUnexecutedRules, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UnexecutedRulesPercentage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        sfeActivationsLayout.setVerticalGroup(
            sfeActivationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sfeActivationsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sfeActivationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(totalSFEActivations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sfeActivationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(SFEPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sfeActivationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalUnexecutedRules, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sfeActivationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UnexecutedRulesPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap())
        );

        javax.swing.GroupLayout summaryPanelLayout = new javax.swing.GroupLayout(summaryPanel);
        summaryPanel.setLayout(summaryPanelLayout);
        summaryPanelLayout.setHorizontalGroup(
            summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(summaryPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(CPUTimeConsumptionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(IOTimeConsumptionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sfeActivations, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                .addContainerGap())
        );
        summaryPanelLayout.setVerticalGroup(
            summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(summaryPanelLayout.createSequentialGroup()
                .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(CPUTimeConsumptionPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                    .addComponent(sfeActivations, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                    .addComponent(IOTimeConsumptionPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout executeBenchmarkerLayout = new javax.swing.GroupLayout(executeBenchmarker);
        executeBenchmarker.setLayout(executeBenchmarkerLayout);
        executeBenchmarkerLayout.setHorizontalGroup(
            executeBenchmarkerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(executeBenchmarkerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(executeBenchmarkerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(plotPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1187, Short.MAX_VALUE)
                    .addComponent(summaryPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        executeBenchmarkerLayout.setVerticalGroup(
            executeBenchmarkerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(executeBenchmarkerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(plotPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(summaryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("", executeBenchmarker);

        executeBenchmarker2.setEnabled(false);
        executeBenchmarker2.setRequestFocusEnabled(false);
        executeBenchmarker2.setVerifyInputWhenFocusTarget(false);

        plotPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Benchmarking Plot", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N
        plotPanel2.setForeground(new java.awt.Color(216, 213, 210));
        plotPanel2.setPreferredSize(new java.awt.Dimension(1126, 645));

        javax.swing.GroupLayout plotPanel2Layout = new javax.swing.GroupLayout(plotPanel2);
        plotPanel2.setLayout(plotPanel2Layout);
        plotPanel2Layout.setHorizontalGroup(
            plotPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        plotPanel2Layout.setVerticalGroup(
            plotPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 622, Short.MAX_VALUE)
        );

        summaryPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Summary", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N

        CPUTimeConsumptionPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "CPU Time Consumption", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N
        CPUTimeConsumptionPanel1.setPreferredSize(new java.awt.Dimension(336, 165));

        jLabel14.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("CPU Used/Total:");
        jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        totalCPUTimeConsumption1.setEditable(false);
        totalCPUTimeConsumption1.setBackground(new java.awt.Color(255, 255, 255));
        totalCPUTimeConsumption1.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        totalCPUTimeConsumption1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalCPUTimeConsumption1.setFocusable(false);
        totalCPUTimeConsumption1.setMinimumSize(new java.awt.Dimension(182, 28));
        totalCPUTimeConsumption1.setName(""); // NOI18N
        totalCPUTimeConsumption1.setPreferredSize(new java.awt.Dimension(93, 28));

        globalCPUTimeConsumption1.setEditable(false);
        globalCPUTimeConsumption1.setBackground(new java.awt.Color(255, 255, 255));
        globalCPUTimeConsumption1.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        globalCPUTimeConsumption1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        globalCPUTimeConsumption1.setFocusable(false);
        globalCPUTimeConsumption1.setMinimumSize(new java.awt.Dimension(182, 28));
        globalCPUTimeConsumption1.setName(""); // NOI18N
        globalCPUTimeConsumption1.setPreferredSize(new java.awt.Dimension(93, 28));

        jLabel15.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Max/Min Time:");
        jLabel15.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        maxCPUTimeConsumption1.setEditable(false);
        maxCPUTimeConsumption1.setBackground(new java.awt.Color(255, 255, 255));
        maxCPUTimeConsumption1.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        maxCPUTimeConsumption1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        maxCPUTimeConsumption1.setFocusable(false);
        maxCPUTimeConsumption1.setPreferredSize(new java.awt.Dimension(93, 28));

        jLabel16.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Average Time:");
        jLabel16.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        minCPUTimeConsumption1.setEditable(false);
        minCPUTimeConsumption1.setBackground(new java.awt.Color(255, 255, 255));
        minCPUTimeConsumption1.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        minCPUTimeConsumption1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        minCPUTimeConsumption1.setFocusable(false);
        minCPUTimeConsumption1.setPreferredSize(new java.awt.Dimension(93, 28));

        jLabel17.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("CPU Locks:");
        jLabel17.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        avgCPUTimeConsumption1.setEditable(false);
        avgCPUTimeConsumption1.setBackground(new java.awt.Color(255, 255, 255));
        avgCPUTimeConsumption1.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        avgCPUTimeConsumption1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        avgCPUTimeConsumption1.setFocusable(false);
        avgCPUTimeConsumption1.setMinimumSize(new java.awt.Dimension(182, 28));
        avgCPUTimeConsumption1.setName(""); // NOI18N
        avgCPUTimeConsumption1.setPreferredSize(new java.awt.Dimension(193, 28));

        cpuLocksTimeConsumption1.setEditable(false);
        cpuLocksTimeConsumption1.setBackground(new java.awt.Color(255, 255, 255));
        cpuLocksTimeConsumption1.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        cpuLocksTimeConsumption1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cpuLocksTimeConsumption1.setFocusable(false);
        cpuLocksTimeConsumption1.setMinimumSize(new java.awt.Dimension(182, 28));
        cpuLocksTimeConsumption1.setName(""); // NOI18N
        cpuLocksTimeConsumption1.setPreferredSize(new java.awt.Dimension(193, 28));

        javax.swing.GroupLayout CPUTimeConsumptionPanel1Layout = new javax.swing.GroupLayout(CPUTimeConsumptionPanel1);
        CPUTimeConsumptionPanel1.setLayout(CPUTimeConsumptionPanel1Layout);
        CPUTimeConsumptionPanel1Layout.setHorizontalGroup(
            CPUTimeConsumptionPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CPUTimeConsumptionPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CPUTimeConsumptionPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CPUTimeConsumptionPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CPUTimeConsumptionPanel1Layout.createSequentialGroup()
                        .addComponent(totalCPUTimeConsumption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(globalCPUTimeConsumption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CPUTimeConsumptionPanel1Layout.createSequentialGroup()
                        .addComponent(maxCPUTimeConsumption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minCPUTimeConsumption1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(avgCPUTimeConsumption1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpuLocksTimeConsumption1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        CPUTimeConsumptionPanel1Layout.setVerticalGroup(
            CPUTimeConsumptionPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CPUTimeConsumptionPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(CPUTimeConsumptionPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(totalCPUTimeConsumption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(globalCPUTimeConsumption1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CPUTimeConsumptionPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(maxCPUTimeConsumption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minCPUTimeConsumption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CPUTimeConsumptionPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(avgCPUTimeConsumption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CPUTimeConsumptionPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(cpuLocksTimeConsumption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        IOTimeConsumptionPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "IO Time Consumption", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N
        IOTimeConsumptionPanel1.setPreferredSize(new java.awt.Dimension(330, 140));

        jLabel18.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Total Time:");
        jLabel18.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        totalIOTimeConsumption1.setEditable(false);
        totalIOTimeConsumption1.setBackground(new java.awt.Color(255, 255, 255));
        totalIOTimeConsumption1.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        totalIOTimeConsumption1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalIOTimeConsumption1.setFocusable(false);
        totalIOTimeConsumption1.setMinimumSize(new java.awt.Dimension(182, 28));
        totalIOTimeConsumption1.setName(""); // NOI18N
        totalIOTimeConsumption1.setPreferredSize(new java.awt.Dimension(182, 28));

        jLabel19.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Max/Min Time:");

        maxIOTimeConsumption1.setEditable(false);
        maxIOTimeConsumption1.setBackground(new java.awt.Color(255, 255, 255));
        maxIOTimeConsumption1.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        maxIOTimeConsumption1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        maxIOTimeConsumption1.setFocusable(false);
        maxIOTimeConsumption1.setPreferredSize(new java.awt.Dimension(99, 28));

        minIOTimeConsumption1.setEditable(false);
        minIOTimeConsumption1.setBackground(new java.awt.Color(255, 255, 255));
        minIOTimeConsumption1.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        minIOTimeConsumption1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        minIOTimeConsumption1.setFocusable(false);
        minIOTimeConsumption1.setPreferredSize(new java.awt.Dimension(99, 28));

        jLabel21.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("Average:");

        avgIOTimeConsumption1.setEditable(false);
        avgIOTimeConsumption1.setBackground(new java.awt.Color(255, 255, 255));
        avgIOTimeConsumption1.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        avgIOTimeConsumption1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        avgIOTimeConsumption1.setFocusable(false);
        avgIOTimeConsumption1.setMinimumSize(new java.awt.Dimension(182, 28));
        avgIOTimeConsumption1.setName(""); // NOI18N
        avgIOTimeConsumption1.setPreferredSize(new java.awt.Dimension(182, 28));

        javax.swing.GroupLayout IOTimeConsumptionPanel1Layout = new javax.swing.GroupLayout(IOTimeConsumptionPanel1);
        IOTimeConsumptionPanel1.setLayout(IOTimeConsumptionPanel1Layout);
        IOTimeConsumptionPanel1Layout.setHorizontalGroup(
            IOTimeConsumptionPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IOTimeConsumptionPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IOTimeConsumptionPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IOTimeConsumptionPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(IOTimeConsumptionPanel1Layout.createSequentialGroup()
                        .addComponent(maxIOTimeConsumption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minIOTimeConsumption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(totalIOTimeConsumption1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(avgIOTimeConsumption1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        IOTimeConsumptionPanel1Layout.setVerticalGroup(
            IOTimeConsumptionPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IOTimeConsumptionPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IOTimeConsumptionPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(totalIOTimeConsumption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IOTimeConsumptionPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(maxIOTimeConsumption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minIOTimeConsumption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IOTimeConsumptionPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(avgIOTimeConsumption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        sfeActivations1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Smart Filter Evaluation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N
        sfeActivations1.setPreferredSize(new java.awt.Dimension(389, 165));
        sfeActivations1.setRequestFocusEnabled(false);
        sfeActivations1.setVerifyInputWhenFocusTarget(false);

        jLabel22.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("Total SFE Executions:");

        totalSFEActivations1.setEditable(false);
        totalSFEActivations1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalSFEActivations1.setFocusable(false);
        totalSFEActivations1.setPreferredSize(new java.awt.Dimension(188, 27));

        jLabel23.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("% SFE Executions:");

        SFEPercentage1.setEditable(false);
        SFEPercentage1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        SFEPercentage1.setFocusable(false);
        SFEPercentage1.setPreferredSize(new java.awt.Dimension(188, 27));

        jLabel24.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("Unexecuted Rules:");

        totalUnexecutedRules1.setEditable(false);
        totalUnexecutedRules1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalUnexecutedRules1.setFocusable(false);
        totalUnexecutedRules1.setPreferredSize(new java.awt.Dimension(188, 27));

        jLabel25.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("% Unexecuted Rules:");

        UnexecutedRulesPercentage1.setEditable(false);
        UnexecutedRulesPercentage1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        UnexecutedRulesPercentage1.setFocusable(false);
        UnexecutedRulesPercentage1.setPreferredSize(new java.awt.Dimension(188, 27));

        javax.swing.GroupLayout sfeActivations1Layout = new javax.swing.GroupLayout(sfeActivations1);
        sfeActivations1.setLayout(sfeActivations1Layout);
        sfeActivations1Layout.setHorizontalGroup(
            sfeActivations1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sfeActivations1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sfeActivations1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sfeActivations1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sfeActivations1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalSFEActivations1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                    .addComponent(SFEPercentage1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalUnexecutedRules1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UnexecutedRulesPercentage1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        sfeActivations1Layout.setVerticalGroup(
            sfeActivations1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sfeActivations1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sfeActivations1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(totalSFEActivations1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sfeActivations1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(SFEPercentage1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sfeActivations1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalUnexecutedRules1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sfeActivations1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UnexecutedRulesPercentage1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout summaryPanel2Layout = new javax.swing.GroupLayout(summaryPanel2);
        summaryPanel2.setLayout(summaryPanel2Layout);
        summaryPanel2Layout.setHorizontalGroup(
            summaryPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(summaryPanel2Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(CPUTimeConsumptionPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(IOTimeConsumptionPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sfeActivations1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addContainerGap())
        );
        summaryPanel2Layout.setVerticalGroup(
            summaryPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(summaryPanel2Layout.createSequentialGroup()
                .addGroup(summaryPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CPUTimeConsumptionPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sfeActivations1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IOTimeConsumptionPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout executeBenchmarker2Layout = new javax.swing.GroupLayout(executeBenchmarker2);
        executeBenchmarker2.setLayout(executeBenchmarker2Layout);
        executeBenchmarker2Layout.setHorizontalGroup(
            executeBenchmarker2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(executeBenchmarker2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(executeBenchmarker2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(plotPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1187, Short.MAX_VALUE)
                    .addComponent(summaryPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        executeBenchmarker2Layout.setVerticalGroup(
            executeBenchmarker2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(executeBenchmarker2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(plotPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(summaryPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("", executeBenchmarker2);

        comparisonBenchmarker.setEnabled(false);
        comparisonBenchmarker.setRequestFocusEnabled(false);
        comparisonBenchmarker.setVerifyInputWhenFocusTarget(false);

        plotPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Bi-variant comparison plot", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N
        plotPanel3.setForeground(new java.awt.Color(216, 213, 210));
        plotPanel3.setPreferredSize(new java.awt.Dimension(1140, 632));

        javax.swing.GroupLayout plotPanel3Layout = new javax.swing.GroupLayout(plotPanel3);
        plotPanel3.setLayout(plotPanel3Layout);
        plotPanel3Layout.setHorizontalGroup(
            plotPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        plotPanel3Layout.setVerticalGroup(
            plotPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 609, Short.MAX_VALUE)
        );

        summaryPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N

        CPUTimeConsumptionPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Time and Resource Consumption Comparison", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N

        jLabelSched1.setFont(new java.awt.Font("Lucida Sans", 3, 12)); // NOI18N
        jLabelSched1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSched1.setText(" ");

        jLabelSched2.setFont(new java.awt.Font("Lucida Sans", 3, 12)); // NOI18N
        jLabelSched2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSched2.setText(" ");

        jLabel3.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Total CPU Time:");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        sumTotalCPUTimeConsumption.setEditable(false);
        sumTotalCPUTimeConsumption.setAutoscrolls(false);
        sumTotalCPUTimeConsumption.setFocusable(false);
        sumTotalCPUTimeConsumption.setPreferredSize(new java.awt.Dimension(156, 24));
        jScrollPane8.setViewportView(sumTotalCPUTimeConsumption);

        sumTotalCPUTimeConsumption1.setEditable(false);
        sumTotalCPUTimeConsumption1.setAutoscrolls(false);
        sumTotalCPUTimeConsumption1.setFocusable(false);
        sumTotalCPUTimeConsumption1.setPreferredSize(new java.awt.Dimension(156, 24));
        jScrollPane13.setViewportView(sumTotalCPUTimeConsumption1);

        jLabel8.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Total IO Time:");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        sumTotalIOTimeConsumption.setEditable(false);
        sumTotalIOTimeConsumption.setAutoscrolls(false);
        sumTotalIOTimeConsumption.setFocusable(false);
        sumTotalIOTimeConsumption.setPreferredSize(new java.awt.Dimension(156, 24));
        jScrollPane10.setViewportView(sumTotalIOTimeConsumption);

        sumTotalIOTimeConsumption1.setEditable(false);
        sumTotalIOTimeConsumption1.setAutoscrolls(false);
        sumTotalIOTimeConsumption1.setFocusable(false);
        sumTotalIOTimeConsumption1.setPreferredSize(new java.awt.Dimension(156, 24));
        jScrollPane14.setViewportView(sumTotalIOTimeConsumption1);

        jLabel20.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Total Lock Time:");
        jLabel20.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        sumTotalLockTime.setEditable(false);
        sumTotalLockTime.setAutoscrolls(false);
        sumTotalLockTime.setFocusable(false);
        sumTotalLockTime.setPreferredSize(new java.awt.Dimension(156, 24));
        jScrollPane11.setViewportView(sumTotalLockTime);

        sumTotalLockTime1.setEditable(false);
        sumTotalLockTime1.setAutoscrolls(false);
        sumTotalLockTime1.setFocusable(false);
        sumTotalLockTime1.setPreferredSize(new java.awt.Dimension(156, 24));
        jScrollPane15.setViewportView(sumTotalLockTime1);

        javax.swing.GroupLayout CPUTimeConsumptionPanel2Layout = new javax.swing.GroupLayout(CPUTimeConsumptionPanel2);
        CPUTimeConsumptionPanel2.setLayout(CPUTimeConsumptionPanel2Layout);
        CPUTimeConsumptionPanel2Layout.setHorizontalGroup(
            CPUTimeConsumptionPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CPUTimeConsumptionPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CPUTimeConsumptionPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CPUTimeConsumptionPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelSched1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CPUTimeConsumptionPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSched2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        CPUTimeConsumptionPanel2Layout.setVerticalGroup(
            CPUTimeConsumptionPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CPUTimeConsumptionPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CPUTimeConsumptionPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSched1)
                    .addComponent(jLabelSched2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CPUTimeConsumptionPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(CPUTimeConsumptionPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CPUTimeConsumptionPanel2Layout.createSequentialGroup()
                        .addGroup(CPUTimeConsumptionPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(CPUTimeConsumptionPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CPUTimeConsumptionPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane15)
                    .addComponent(jScrollPane11)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        sfeActivations2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Smart Filter Evaluation Comparison", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Sans", 3, 12))); // NOI18N

        jLabel33.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setText("Total SFE Executions:");

        jLabel34.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel34.setText("Total Unexecuted Rules:");

        sumTotalSFEExecutions.setEditable(false);
        sumTotalSFEExecutions.setAutoscrolls(false);
        sumTotalSFEExecutions.setFocusable(false);
        jScrollPane19.setViewportView(sumTotalSFEExecutions);

        sumTotalSFEExecutions1.setEditable(false);
        sumTotalSFEExecutions1.setAutoscrolls(false);
        sumTotalSFEExecutions1.setFocusable(false);
        jScrollPane20.setViewportView(sumTotalSFEExecutions1);

        sumTotalUnexecutedRules.setEditable(false);
        sumTotalUnexecutedRules.setAutoscrolls(false);
        sumTotalUnexecutedRules.setFocusable(false);
        jScrollPane21.setViewportView(sumTotalUnexecutedRules);

        sumTotalUnexecutedRules1.setEditable(false);
        sumTotalUnexecutedRules1.setAutoscrolls(false);
        sumTotalUnexecutedRules1.setFocusable(false);
        jScrollPane22.setViewportView(sumTotalUnexecutedRules1);

        jLabelSched1_1.setFont(new java.awt.Font("Lucida Sans", 3, 12)); // NOI18N
        jLabelSched1_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSched1_1.setText(" ");

        jLabelSched2_1.setFont(new java.awt.Font("Lucida Sans", 3, 12)); // NOI18N
        jLabelSched2_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSched2_1.setText(" ");

        javax.swing.GroupLayout sfeActivations2Layout = new javax.swing.GroupLayout(sfeActivations2);
        sfeActivations2.setLayout(sfeActivations2Layout);
        sfeActivations2Layout.setHorizontalGroup(
            sfeActivations2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(sfeActivations2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sfeActivations2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sfeActivations2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabelSched1_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane21, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(jScrollPane19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sfeActivations2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(jLabelSched2_1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane22))
                .addContainerGap())
        );
        sfeActivations2Layout.setVerticalGroup(
            sfeActivations2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sfeActivations2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sfeActivations2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSched1_1)
                    .addComponent(jLabelSched2_1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sfeActivations2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane19)
                    .addComponent(jScrollPane20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sfeActivations2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        uvigoLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logoUVIGO.png"))); // NOI18N
        uvigoLogo.setFocusable(false);

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logoSING.png"))); // NOI18N

        javax.swing.GroupLayout summaryPanel3Layout = new javax.swing.GroupLayout(summaryPanel3);
        summaryPanel3.setLayout(summaryPanel3Layout);
        summaryPanel3Layout.setHorizontalGroup(
            summaryPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(summaryPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CPUTimeConsumptionPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(summaryPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(summaryPanel3Layout.createSequentialGroup()
                        .addComponent(sfeActivations2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, summaryPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(uvigoLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        summaryPanel3Layout.setVerticalGroup(
            summaryPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, summaryPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(summaryPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CPUTimeConsumptionPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(summaryPanel3Layout.createSequentialGroup()
                        .addGroup(summaryPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sfeActivations2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(uvigoLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout comparisonBenchmarkerLayout = new javax.swing.GroupLayout(comparisonBenchmarker);
        comparisonBenchmarker.setLayout(comparisonBenchmarkerLayout);
        comparisonBenchmarkerLayout.setHorizontalGroup(
            comparisonBenchmarkerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comparisonBenchmarkerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(comparisonBenchmarkerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(plotPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1187, Short.MAX_VALUE)
                    .addComponent(summaryPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        comparisonBenchmarkerLayout.setVerticalGroup(
            comparisonBenchmarkerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comparisonBenchmarkerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(plotPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(summaryPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("", comparisonBenchmarker);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1219, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pluginCloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pluginCloseButtonActionPerformed
        // TODO add your handling code here:
        //showPluginsFrame.setVisible(false);
        showPluginsFrame.dispose();
    }//GEN-LAST:event_pluginCloseButtonActionPerformed

    private void generatePlotsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatePlotsButtonActionPerformed
        // TODO add your handling code here:
        int selectedItem= numCpus.getSelectedIndex();
        int usedCPUS = 1;
        switch(selectedItem){
            case 0: usedCPUS = Runtime.getRuntime().availableProcessors();
                    break;
            case 1: usedCPUS = 1;
                    break;
            case 2: usedCPUS = 2;
                    break;
            case 3: usedCPUS = 4;
                    break;
            case 4: usedCPUS = 8;
                    break;
            case 5: usedCPUS = 16;
                    break;
            default: break;
        }
        
        Simulator simulator = new Simulator(fullLoader,usedCPUS,jOutputText);
        simulator.beginSimulation();
        if(simulator.isExecuted()){
            JOptionPane.showMessageDialog( null, "Simulation process success","", 
                                           JOptionPane.INFORMATION_MESSAGE);
            
            simulator.plotResults(plotPanel,simulator.getExecutedSchedulers().get(0));
            simulator.plotResults(plotPanel2,simulator.getExecutedSchedulers().get(1));
            simulator.combinedPlotResults(plotPanel3, new String[]{simulator.getExecutedSchedulers().get(0),
                                                                   simulator.getExecutedSchedulers().get(1)});
            simulator.getSimulatorResults().get(0).
                    printSimulatorResults(new JTextField[]{totalCPUTimeConsumption,
                                                           globalCPUTimeConsumption,
                                                           maxCPUTimeConsumption,
                                                           minCPUTimeConsumption,
                                                           avgCPUTimeConsumption,
                                                           cpuLocksTimeConsumption,
                                                           totalIOTimeConsumption,
                                                           maxIOTimeConsumption,
                                                           minIOTimeConsumption,
                                                           avgIOTimeConsumption,
                                                           totalSFEActivations,
                                                           SFEPercentage,totalUnexecutedRules,
                                                           UnexecutedRulesPercentage
                                         });
            simulator.getSimulatorResults().get(1).
                    printSimulatorResults(new JTextField[]{totalCPUTimeConsumption1,
                                                           globalCPUTimeConsumption1,
                                                           maxCPUTimeConsumption1,
                                                           minCPUTimeConsumption1,
                                                           avgCPUTimeConsumption1,
                                                           cpuLocksTimeConsumption1,
                                                           totalIOTimeConsumption1,
                                                           maxIOTimeConsumption1,
                                                           minIOTimeConsumption1,
                                                           avgIOTimeConsumption1,
                                                           totalSFEActivations1,
                                                           SFEPercentage1,totalUnexecutedRules1,
                                                           UnexecutedRulesPercentage1
                                         });
            
            jTabbedPane1.setTitleAt(1, simulator.getExecutedSchedulers().get(0));
            jTabbedPane1.setTitleAt(2, simulator.getExecutedSchedulers().get(1));
            jTabbedPane1.setTitleAt(3, simulator.getExecutedSchedulers().get(0)+" vs "+simulator.getExecutedSchedulers().get(1));
            jTabbedPane1.getComponentAt(1).setEnabled(true);
            jTabbedPane1.setEnabledAt(1,true);
            jTabbedPane1.setEnabledAt(2,true);
            jTabbedPane1.setEnabledAt(3,true);
            
            //GENERATE COMPARISON DATA
            jLabelSched1.setText(simulator.getSimulatorResults().get(0).getSchedulerUsed());
            jLabelSched1_1.setText(simulator.getSimulatorResults().get(0).getSchedulerUsed());
            
            jLabelSched2.setText(simulator.getSimulatorResults().get(1).getSchedulerUsed());
            jLabelSched2_1.setText(simulator.getSimulatorResults().get(1).getSchedulerUsed());
            
            double cpuDifference = (simulator.getSimulatorResults().get(0).getGlobalCPUTime() + simulator.getSimulatorResults().get(0).getGlobalCPULockTime()) - 
                                   (simulator.getSimulatorResults().get(1).getGlobalCPUTime() + simulator.getSimulatorResults().get(1).getGlobalCPULockTime());
            
            if( cpuDifference > 0)
            {
                JLog.insertLog(sumTotalCPUTimeConsumption,String.format("%2.2f",(simulator.getSimulatorResults().get(0).getGlobalCPUTime())+simulator.getSimulatorResults().get(0).getGlobalCPULockTime())+" (+"+String.format("%.2f",Math.abs(cpuDifference))+")",JLog.FAIL);
                JLog.insertLog(sumTotalCPUTimeConsumption1,String.format("%.2f",(simulator.getSimulatorResults().get(1).getGlobalCPUTime())+simulator.getSimulatorResults().get(1).getGlobalCPULockTime()),JLog.INFO);                                                                                               
            }else{
                JLog.insertLog(sumTotalCPUTimeConsumption,String.format("%.2f",(simulator.getSimulatorResults().get(0).getGlobalCPUTime())+simulator.getSimulatorResults().get(0).getGlobalCPULockTime()),JLog.INFO);
                JLog.insertLog(sumTotalCPUTimeConsumption1,String.format("%.2f",(simulator.getSimulatorResults().get(1).getGlobalCPUTime())+simulator.getSimulatorResults().get(1).getGlobalCPULockTime())+" (+"+String.format("%.2f",Math.abs(cpuDifference))+")",JLog.FAIL);
            }
            
            double ioDifference = simulator.getSimulatorResults().get(0).getGlobalIOTime() - 
                                  simulator.getSimulatorResults().get(1).getGlobalIOTime();
            
            if( ioDifference > 0)
            {
                JLog.insertLog(sumTotalIOTimeConsumption,String.format("%.2f",simulator.getSimulatorResults().get(0).getGlobalIOTime())+" (+"+String.format("%.2f",Math.abs(ioDifference))+")",JLog.FAIL);
                JLog.insertLog(sumTotalIOTimeConsumption1,String.format("%.2f",simulator.getSimulatorResults().get(1).getGlobalIOTime()),JLog.INFO);
            }else{
                JLog.insertLog(sumTotalIOTimeConsumption,String.format("%.2f",simulator.getSimulatorResults().get(0).getGlobalIOTime()),JLog.INFO);
                JLog.insertLog(sumTotalIOTimeConsumption1,String.format("%.2f",simulator.getSimulatorResults().get(1).getGlobalIOTime())+" (+"+String.format("%.2f",Math.abs(ioDifference))+")",JLog.FAIL);
            }
            
            double lockDifference = simulator.getSimulatorResults().get(0).getGlobalCPULockTime() -
                                    simulator.getSimulatorResults().get(1).getGlobalCPULockTime();
            
            if( lockDifference > 0)
            {
                JLog.insertLog(sumTotalLockTime,String.format("%.2f",simulator.getSimulatorResults().get(0).getGlobalCPULockTime())+" (+"+String.format("%.2f",Math.abs(lockDifference))+")",JLog.FAIL);
                JLog.insertLog(sumTotalLockTime1,String.format("%.2f",simulator.getSimulatorResults().get(1).getGlobalCPULockTime()),JLog.INFO);
            }else{
                JLog.insertLog(sumTotalLockTime,String.format("%.2f",simulator.getSimulatorResults().get(0).getGlobalCPULockTime()),JLog.INFO);
                JLog.insertLog(sumTotalLockTime1,String.format("%.2f",simulator.getSimulatorResults().get(1).getGlobalCPULockTime())+" (+"+String.format("%.2f",Math.abs(lockDifference))+")",JLog.FAIL);
            }
            
            double sfeExecutions = simulator.getSimulatorResults().get(0).getNumSFEActivations() -
                                   simulator.getSimulatorResults().get(1).getNumSFEActivations();
            
            if( sfeExecutions > 0)
            {
                JLog.insertLog(sumTotalSFEExecutions,String.format("%d",simulator.getSimulatorResults().get(0).getNumSFEActivations()),JLog.INFO);
                JLog.insertLog(sumTotalSFEExecutions1,String.format("%d",simulator.getSimulatorResults().get(1).getNumSFEActivations())+" (-"+String.format("%.2f",Math.abs(sfeExecutions))+")",JLog.FAIL);
            }else{
                JLog.insertLog(sumTotalSFEExecutions,String.format("%d",simulator.getSimulatorResults().get(0).getNumSFEActivations())+" (-"+String.format("%.2f",Math.abs(sfeExecutions))+")",JLog.FAIL);
                JLog.insertLog(sumTotalSFEExecutions1,String.format("%d",simulator.getSimulatorResults().get(1).getNumSFEActivations()),JLog.INFO);
            }
            
            double unexecutedRules = simulator.getSimulatorResults().get(0).getNumUnexecutedRules()-
                                   simulator.getSimulatorResults().get(1).getNumUnexecutedRules();
            
            if( unexecutedRules > 0)
            {
                JLog.insertLog(sumTotalUnexecutedRules,String.format("%d",simulator.getSimulatorResults().get(0).getNumUnexecutedRules()),JLog.INFO);
                JLog.insertLog(sumTotalUnexecutedRules1,String.format("%d",simulator.getSimulatorResults().get(1).getNumUnexecutedRules())+" (-"+Math.abs(unexecutedRules)+")",JLog.FAIL);
            }else{
                JLog.insertLog(sumTotalUnexecutedRules,String.format("%d",simulator.getSimulatorResults().get(0).getNumUnexecutedRules())+" (-"+Math.abs(unexecutedRules)+")",JLog.FAIL);
                JLog.insertLog(sumTotalUnexecutedRules1,String.format("%d",simulator.getSimulatorResults().get(1).getNumUnexecutedRules()),JLog.INFO);
            }
            
        }else{
            JOptionPane.showMessageDialog( null, "Simulated aborted. Information is not correct", 
                                           "Error during simulation.", 
                                           JOptionPane.ERROR_MESSAGE );
        }
    }//GEN-LAST:event_generatePlotsButtonActionPerformed
    
        
    private static void adjustJTableRowSizes(JTable jTable) {
        for (int row = 0; row < jTable.getRowCount(); row++) {
            int maxHeight = 0;
            for (int column = 0; column < jTable.getColumnCount(); column++) {
                TableCellRenderer cellRenderer = jTable.getCellRenderer(row, column);
                Object valueAt = jTable.getValueAt(row, column);
                Component tableCellRendererComponent = cellRenderer.getTableCellRendererComponent(jTable, valueAt, false, false, row, column);
                int heightPreferable = tableCellRendererComponent.getPreferredSize().height;
                maxHeight = Math.max(heightPreferable, maxHeight);
            }
            jTable.setRowHeight(row, maxHeight);
        }

    }
    
    public static void adjustColumnSizes(JTable table, int column, int margin) {
        DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
        TableColumn col = colModel.getColumn(column);
        int width;

        TableCellRenderer renderer = col.getHeaderRenderer();
        if (renderer == null) {
            renderer = table.getTableHeader().getDefaultRenderer();
        }
        Component comp = renderer.getTableCellRendererComponent(
                table, col.getHeaderValue(), false, false, 0, 0);
        width = comp.getPreferredSize().width;

        for (int r = 0; r < table.getRowCount(); r++) {
            renderer = table.getCellRenderer(r, column);
            comp = renderer.getTableCellRendererComponent(
                    table, table.getValueAt(r, column), false, false, r, column);
            int currentWidth = comp.getPreferredSize().width;
            width = Math.max(width, currentWidth);
        }

        width += 2 * margin;

        col.setPreferredWidth(width);
    }
    
//    private void updateTable(JTable table,int margin){
//        adjustJTableRowSizes(table);
//        for(int i=0;i<table.getColumnCount();i++){
//            adjustColumnSizes(table, i, margin);
//        }
//    }
    
    private ArrayList<Class<?>> getClassesForPackage(String pckgname)
        throws ClassNotFoundException {
        
        final ArrayList<Class<?>> classes = new ArrayList<>();

        try {
            final ClassLoader cld = Thread.currentThread()
                    .getContextClassLoader();

            if (cld == null)
                throw new ClassNotFoundException("Can't get class loader.");

            final Enumeration<URL> resources = cld.getResources(pckgname.replace('.', '/'));
            URLConnection connection;

            for (URL url = null; resources.hasMoreElements()
                    && ((url = resources.nextElement()) != null);) {
                try {
                    connection = url.openConnection();

                    if (connection instanceof JarURLConnection) {
                        checkJarFile((JarURLConnection) connection, pckgname,
                                classes);
                    } else if (connection instanceof FileURLConnection) {
                        try {
                            checkDirectory(
                                    new File(URLDecoder.decode(url.getPath(),
                                            "UTF-8")), pckgname, classes);
                        } catch (final UnsupportedEncodingException ex) {
                            throw new ClassNotFoundException(
                                    pckgname
                                            + " does not appear to be a valid package (Unsupported encoding)",
                                    ex);
                        }
                    } else
                        throw new ClassNotFoundException(pckgname + " ("
                                + url.getPath()
                                + ") does not appear to be a valid package");
                } catch (final IOException ioex) {
                    throw new ClassNotFoundException(
                            "IOException was thrown when trying to get all resources for "
                                    + pckgname, ioex);
                }
            }
        } catch (final NullPointerException ex) {
            throw new ClassNotFoundException(
                    pckgname
                            + " does not appear to be a valid package (Null pointer exception)",
                    ex);
        } catch (final IOException ioex) {
            throw new ClassNotFoundException(
                    "IOException was thrown when trying to get all resources for "
                            + pckgname, ioex);
        }

    return classes;
    }
    
    private void checkDirectory(File directory, String pckgname,
        ArrayList<Class<?>> classes) throws ClassNotFoundException {
        File tmpDirectory;

        if (directory.exists() && directory.isDirectory()) {
            final String[] files = directory.list();

            for (final String file : files) {
                if (file.endsWith(".class")) {
                    try {
                        classes.add(Class.forName(pckgname + '.'
                                + file.substring(0, file.length() - 6)));
                    } catch (final NoClassDefFoundError e) {
                        // do nothing. this class hasn't been found by the
                        // loader, and we don't care.
                    }
                } else if ((tmpDirectory = new File(directory, file))
                        .isDirectory()) {
                    checkDirectory(tmpDirectory, pckgname + "." + file, classes);
                }
            }
        }
    }

    private void checkJarFile(JarURLConnection connection,
            String pckgname, ArrayList<Class<?>> classes)
            throws ClassNotFoundException, IOException {
        
        final JarFile jarFile = connection.getJarFile();
        final Enumeration<JarEntry> entries = jarFile.entries();
        String name;

        for (JarEntry jarEntry = null; entries.hasMoreElements()
                && ((jarEntry = entries.nextElement()) != null);) {
            name = jarEntry.getName();

            if (name.contains(".class")) {
                name = name.substring(0, name.length() - 6).replace('/', '.');

                if (name.contains(pckgname)) {
                    classes.add(Class.forName(name));
                }
            }
        }
    }
       
    
    private void showEmailRules(String emailName){
        
        
        JFrame frameRules = new JFrame("RULES MATCHED FOR '" + emailName+ "'");
        JTable tRules = new JTable();
        frameRules.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        Dimension window = Toolkit.getDefaultToolkit().getScreenSize();
        
        DefaultTableModel rulesTableModel = new DefaultTableModel(new Object[]{"NAME","CPU TIME","IO TIME"}, 0);
        Iterator rulesIterator = fullLoader.getEmails().getEmailResult(emailName).iterator();
        
        while(rulesIterator.hasNext()){
            String ruleName  = rulesIterator.next().toString();
            rulesTableModel.addRow( new Object[]{ruleName,
                                    fullLoader.getRuleset().getCPUTime(ruleName),
                                    fullLoader.getRuleset().getIOTime(ruleName)} );
        }
        tRules.setModel(rulesTableModel);
        TableColumnAdjuster tAdjuster = new TableColumnAdjuster(tRules);
        tAdjuster.setColumnHeaderIncluded(true);
        tAdjuster.setColumnDataIncluded(true);
        tAdjuster.adjustColumns();
        
        JScrollPane scrollPane = new JScrollPane(tRules);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        
        int height= Math.round((float)Math.min(Math.max(tRules.getPreferredSize().getHeight(),52),200));
        frameRules.setPreferredSize(new Dimension(tRules.getPreferredSize().width+23,height));
        frameRules.setLocation( (window.width-frameRules.getPreferredSize().width)/2,
                                (window.height-frameRules.getPreferredSize().height)/2);
        
        frameRules.setContentPane(scrollPane);
        frameRules.setResizable(false);
        frameRules.pack();
        frameRules.setVisible(true);
    }
    
    private void showEmailPlugins(String emailName){
            
        JFrame framePlugins = new JFrame("PLUGINS INVOLVED FOR '"+emailName+"'");
        JTable tPlugins = new JTable();
        framePlugins.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        Dimension window = Toolkit.getDefaultToolkit().getScreenSize();
        
        DefaultTableModel rulesTableModel = new DefaultTableModel(new Object[]{"NAME","PLUGIN"}, 0);
        Iterator rulesIterator = fullLoader.getEmails().getEmailResult(emailName).iterator();
        
        while(rulesIterator.hasNext()){
            String ruleName  = rulesIterator.next().toString();
            rulesTableModel.addRow( new Object[]{ruleName,fullLoader.getRuleset().getPluginName(ruleName)} );
        }
        
        tPlugins.setModel(rulesTableModel);
        TableColumnAdjuster tAdjuster = new TableColumnAdjuster(tPlugins);
        tAdjuster.setOnlyAdjustLarger(true);
        tAdjuster.adjustColumns();
        JScrollPane scrollPane = new JScrollPane(tPlugins);
        int height= Math.round((float)Math.min(Math.max(tPlugins.getPreferredSize().getHeight(),52),200));
        framePlugins.setPreferredSize(new Dimension(tPlugins.getPreferredSize().width+23,height));
        framePlugins.setLocation( (window.width-framePlugins.getPreferredSize().width)/2,
                                (window.height-framePlugins.getPreferredSize().height)/2);
        
        framePlugins.setContentPane(scrollPane);
        framePlugins.setResizable(false);
        framePlugins.pack();
        framePlugins.setVisible(true);
    }
    
    private void showRulesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showRulesButtonActionPerformed

        Dimension window = Toolkit.getDefaultToolkit().getScreenSize();
        JFrame framePlugins = new JFrame("RULE ARRANGEMENT LIST");
        JTable tPlugins = new JTable();
        framePlugins.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        
        String columName1 = "<html>'" + fullLoader.getSchedulerByName(jFTESched1.getText()).getName() +"' Scheduler <br>RULE NAME";
        String columName2 = "<html>'" + fullLoader.getSchedulerByName(jFTESched2.getText()).getName() +"' Scheduler <br>RULE NAME";
        
        DefaultTableModel rulesTableModel = new DefaultTableModel(new Object[]{"<html><br>POSITION",columName1,columName2}, 0);
        
        Iterator<Rule> schedIter1 = fullLoader.getSchedulerByName(jFTESched1.getText()).getPlan().getRules().iterator();
        Iterator<Rule> schedIter2 = fullLoader.getSchedulerByName(jFTESched2.getText()).getPlan().getRules().iterator();
        
        int i=0;
        while(schedIter1.hasNext() || schedIter2.hasNext()){
            if(schedIter1.hasNext() && schedIter2.hasNext())
                rulesTableModel.addRow(new Object[]{String.valueOf(i),schedIter1.next().getName(),schedIter2.next().getName()});
            else{
                if(schedIter1.hasNext())
                    rulesTableModel.addRow(new Object[]{String.valueOf(i),schedIter1.next().getName(),""});
                else rulesTableModel.addRow(new Object[]{String.valueOf(i),schedIter2.next().getName(),""});
            }
            i++;
        }

        tPlugins.setModel(rulesTableModel);   
       
        TableColumnAdjuster tableAdjuster = new TableColumnAdjuster(tPlugins);
        tableAdjuster.setColumnHeaderIncluded(true);
        tableAdjuster.setColumnDataIncluded(true);
        tableAdjuster.adjustColumns();

        JScrollPane scrollPane = new JScrollPane(tPlugins);
        framePlugins.setContentPane(scrollPane);
        
        int height= Math.round((float)Math.min(tPlugins.getPreferredSize().getHeight(),200));
        framePlugins.setPreferredSize(new Dimension(tPlugins.getPreferredSize().width+23,height));
        framePlugins.setLocation( (window.width-framePlugins.getPreferredSize().width)/2,
                                (window.height-framePlugins.getPreferredSize().height)/2);
        
        framePlugins.setResizable(false);
        framePlugins.pack();
        framePlugins.setVisible(true);
    }//GEN-LAST:event_showRulesButtonActionPerformed

    
    
    private void showPluginsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPluginsButtonActionPerformed
        // TODO add your handling code here:
        JFrame framePlugins = new JFrame("PLUGINS LOADED");
        JTable tPlugins = new JTable();
        framePlugins.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        Dimension window = Toolkit.getDefaultToolkit().getScreenSize();
        
        DefaultTableModel pluginsTableModel = new DefaultTableModel(new Object[]{"ID","PLUGIN NAME"}, 0);
        
        Iterator<String> iter = fullLoader.getRuleset().getPlugins().iterator();
        int i=0;
        while(iter.hasNext()){
            pluginsTableModel.addRow(new Object[]{String.valueOf(i),iter.next()});
            i++;
        }

        tPlugins.setModel(pluginsTableModel);
        TableColumnAdjuster tableAdjuster = new TableColumnAdjuster(tPlugins);
        tableAdjuster.setOnlyAdjustLarger(true);
        tableAdjuster.adjustColumns();
        
        JScrollPane scrollPane = new JScrollPane(tPlugins);
        framePlugins.setContentPane(scrollPane);
        
        int height= Math.round(Math.min(tPlugins.getPreferredSize().height,400));
        framePlugins.setPreferredSize(new Dimension(tPlugins.getPreferredSize().width+23,height));
        framePlugins.setLocation( (window.width-framePlugins.getPreferredSize().width)/2,
                                  (window.height-framePlugins.getPreferredSize().height)/2);
        
        
        framePlugins.setResizable(false);
        framePlugins.pack();
        framePlugins.setVisible(true);
    }//GEN-LAST:event_showPluginsButtonActionPerformed

    
    
    private void rulesCloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rulesCloseButtonActionPerformed
        // TODO add your handling code here:
        showRulesFrame.dispose();
    }//GEN-LAST:event_rulesCloseButtonActionPerformed

    private void addSchedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSchedButtonActionPerformed
        // TODO add your handling code here:
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Schedulers");
        DefaultMutableTreeNode simpleNode = new DefaultMutableTreeNode("Simple");
        DefaultMutableTreeNode complexNode = new DefaultMutableTreeNode("Complex");
        root.add(simpleNode);
        root.add(complexNode);
        
        DefaultTreeModel tModel = new DefaultTreeModel(root);
        jTree1.setModel(tModel);
        jTree1.setRootVisible(false);
        
        
        DefaultListModel<String> selectedModel;
        DefaultListModel<String> listModel = (DefaultListModel<String>)allSchedulers1.getModel();
        if(schedulerSelected.getModel() instanceof DefaultListModel){
            selectedModel = (DefaultListModel<String>)schedulerSelected.getModel();
        }else{
            selectedModel = new DefaultListModel<>();
            schedulerSelected.setModel(selectedModel);
            removeSchedButton.setEnabled(true);
        }
        
        if(selectedModel.getSize() < 2){
            String element = (String)allSchedulers1.getSelectedValue();
            if( element !=null ){
                selectedModel.addElement(element);
                if(selectedModel.getSize()==2) {
                    addSchedButton.setEnabled(false);
                    saveSchedButton.setEnabled(true);
                }
                listModel.removeElement(element);
            }
        }
    }//GEN-LAST:event_addSchedButtonActionPerformed

    private void removeSchedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeSchedButtonActionPerformed
        // TODO add your handling code here:
        DefaultListModel<String> selectedModel  = (DefaultListModel<String>)schedulerSelected.getModel();
        DefaultListModel<String> listModel = (DefaultListModel<String>)allSchedulers1.getModel();
        
        if(selectedModel.getSize()==0){
            removeSchedButton.setEnabled(false);
        }else{
            String element = (String)schedulerSelected.getSelectedValue();
            if(element != null){
                selectedModel.removeElement(element);
                listModel.addElement(element);
                addSchedButton.setEnabled(true);
                saveSchedButton.setEnabled(false);
            }

        }
    }//GEN-LAST:event_removeSchedButtonActionPerformed

    private void saveSchedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSchedButtonActionPerformed
        // TODO add your handling code here:
        StyleContext defaultStyle = StyleContext.getDefaultStyleContext();
        Style styleItalic = defaultStyle.addStyle("Italic", null);
        Style styleBold = defaultStyle.addStyle("Bold", null);
        StyleConstants.setItalic(styleItalic, true);
        StyleConstants.setBold(styleBold, true);
        StyleConstants.setItalic(styleBold, true);
        
        if( schedulerSelected.getModel().getSize() == 2 &&
            schedulerSelected.getModel() instanceof DefaultListModel ){
            DefaultListModel<String> sModel = (DefaultListModel<String>) schedulerSelected.getModel();
            Enumeration<String> elements =  sModel.elements();
            try {
                Class<?> c1 = Class.forName("scheduler.benchmarker.schedulers.simple."+ elements.nextElement());
                Class<?> c2 = Class.forName("scheduler.benchmarker.schedulers.simple."+ elements.nextElement());
                
                jFTESched1.getDocument().insertString(jFTESched1.getCaretPosition(),c1.getPackage().getName(),styleItalic);
                jFTESched1.getDocument().insertString(jFTESched1.getCaretPosition(),"."+ c1.getSimpleName(),styleBold);
                jFTESched2.getDocument().insertString(jFTESched2.getCaretPosition(),c2.getPackage().getName(),styleItalic);
                jFTESched2.getDocument().insertString(jFTESched2.getCaretPosition(),"."+ c2.getSimpleName(),styleBold);
            } catch (ClassNotFoundException | BadLocationException ex) {
                System.out.println("Error:" +ex.getMessage());
            }
        }
        
        if( !jFTFEmails.getText().isEmpty() &&
            !jFTESched1.getText().isEmpty() &&
            !jFTESched2.getText().isEmpty() &&
            !jFTFRuleInf.getText().isEmpty())
        {
            loadButton.setEnabled(true);
       }else loadButton.setEnabled(false);
        
        schedulerTree.dispose();
    }//GEN-LAST:event_saveSchedButtonActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        // TODO add your handling code here:

        fullLoader = new FullLoader( jFTFEmails.getText(), jFTFRuleInf.getText(),
            jFTFRequiredScore.getText(),jOutputText);
        emailSummaryTable.setEnabled(false);

        if( fullLoader.getEmails()!= null && fullLoader.getEmails().getSize()> 0 &&
            fullLoader.getRuleset()!= null && !fullLoader.getRuleset().isEmpty())
        {

            fullLoader.executeScheduler(jFTESched1.getText());
            fullLoader.executeScheduler(jFTESched2.getText());

            emailSummaryTable.setEnabled(true);

            DefaultTableModel model = new DefaultTableModel(new String [] {"EMAIL NAME", "RULES", "PLUGINS" }, 0)
            {
                Class[] types = new Class[]
                {
                    String.class, String.class, String.class
                };

                @Override
                public Class getColumnClass(int columnIndex)
                {
                    return types[columnIndex];
                }

                boolean[] canEdit = new boolean [] {
                    true, true, true
                };

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            };

            emailSummaryTable.setModel(model);
            TableColumn buttonColumn1 = emailSummaryTable.getColumnModel().getColumn(1);
            TableColumn buttonColumn2 = emailSummaryTable.getColumnModel().getColumn(2);
            TableButton buttonsRules = new TableButton();
            buttonsRules.addHandler(new TableButton.TableButtonPressedHandler() {

                @Override
                public void onButtonPress(int row, int column) {;
                    showEmailRules(emailSummaryTable.getValueAt(row, 0).toString());
                }

            });
            TableButton buttonsPlugins = new TableButton();
            buttonsPlugins.addHandler(new TableButton.TableButtonPressedHandler() {

                @Override
                public void onButtonPress(int row, int column) {
                    // TODO Auto-generated method stub
                    showEmailPlugins(emailSummaryTable.getValueAt(row, 0).toString());
                }
            });

            buttonColumn1.setCellRenderer(buttonsRules);
            buttonColumn1.setCellEditor(buttonsRules);
            buttonColumn2.setCellRenderer(buttonsPlugins);
            buttonColumn2.setCellEditor(buttonsPlugins);

            Iterator emailIterator = fullLoader.getEmails().getEmails().iterator();

            while(emailIterator.hasNext()){
                String emailName = (String) emailIterator.next();
                model.addRow(new Object[]{emailName,"Show","Show"});
            }

            emailSummaryTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            if(model.getRowCount()<9)
                emailSummaryTable.getColumnModel().getColumn(0).setPreferredWidth(522);
            else
                emailSummaryTable.getColumnModel().getColumn(0).setPreferredWidth(518);
            emailSummaryTable.setRowHeight(27);
            loadedEmails.setText(String.valueOf(fullLoader.getEmails().getSize()));
            loadedPlugins.setText(String.valueOf(fullLoader.getRuleset().getPlugins().size()));
            loadedRules.setText(String.valueOf(fullLoader.getRuleset().getSize()));
            sched1Filter.setText(String.valueOf(fullLoader.getSchedulerByName(jFTESched1.getText()).getPlan().getRules().size()));
            sched2Filter.setText(String.valueOf(fullLoader.getSchedulerByName(jFTESched2.getText()).getPlan().getRules().size()));
            showPluginsButton.setEnabled(true);
            showRulesButton.setEnabled(true);
            generatePlotsButton.setEnabled(true);

            labelCPUs.setEnabled(true);
            numCpus.setEnabled(true);

        }
    }//GEN-LAST:event_loadButtonActionPerformed

    private void bSched1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSched1ActionPerformed

        Dimension window = Toolkit.getDefaultToolkit().getScreenSize();
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Schedulers");
        DefaultMutableTreeNode simpleSched  = new DefaultMutableTreeNode("Simple");
        DefaultMutableTreeNode complexSched  = new DefaultMutableTreeNode("Complex");

        try {
            ArrayList<Class<?>> simpleClasses = getClassesForPackage("scheduler.benchmarker.schedulers.simple");
            Collections.sort(simpleClasses,new Comparator<Class<?>>(){
                @Override
                public int compare(Class<?> o1, Class<?> o2) {
                    return ( o1.getSimpleName().compareTo(o2.getSimpleName()) );
                }
            });

            Iterator<Class<?>> sIter = simpleClasses.iterator();

            while(sIter.hasNext()){
                Class<?> cl = sIter.next();
                if(!cl.isInterface() && !cl.getName().contains("$") &&
                    !cl.getSimpleName().equals("Scheduler"))
                simpleSched.add(new DefaultMutableTreeNode(cl.getSimpleName()));
            }
            root.add(simpleSched);
            
            ArrayList<Class<?>> complexClasses = getClassesForPackage("scheduler.benchmarker.schedulers.meta");
            Collections.sort(complexClasses,new Comparator<Class<?>>(){
                @Override
                public int compare(Class<?> o1, Class<?> o2) {
                    return ( o1.getSimpleName().compareTo(o2.getSimpleName()) );
                }
            });

            Iterator<Class<?>> cIter = complexClasses.iterator();
            while(cIter.hasNext()){
                Class<?> cl = cIter.next();
                if(!cl.isInterface() && !cl.getName().contains("$") &&
                    !cl.getSimpleName().equals("MetaScheduler"))
                complexSched.add(new DefaultMutableTreeNode(cl.getSimpleName()));
            }
            
            root.add(complexSched);
            jTree1.setShowsRootHandles(true);
            jTree1.setSelectionModel(new DefaultTreeSelectionModel());
            jTree1.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener() {
                @Override
                public void valueChanged(TreeSelectionEvent e) {
                    System.out.println(e.getPath().toString());
                }
            });
            
            jTree1.setModel(new DefaultTreeModel(root));

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(),"Error obtaining schedulers",JOptionPane.ERROR_MESSAGE);
        }
        
        removeSchedButton.setEnabled(false);
        saveSchedButton.setEnabled(false);
        schedulerTree.setLocation( (window.width-schedulerTree.getPreferredSize().width)/2,
                                   (window.height-schedulerTree.getPreferredSize().height)/2);
        schedulerTree.pack();
        schedulerTree.setVisible(true);

        if( !jFTFEmails.getText().isEmpty() &&
            !jFTESched1.getText().isEmpty() &&
            !jFTESched2.getText().isEmpty() &&
            !jFTFRuleInf.getText().isEmpty())
        {
            loadButton.setEnabled(true);
        }else loadButton.setEnabled(false);
    }//GEN-LAST:event_bSched1ActionPerformed

    private void bEvalOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEvalOrderActionPerformed
        // TODO add your handling code here:
        JFileChooser rulesPath = new JFileChooser(".");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV File", "csv");
        rulesPath.setDialogTitle("RULES CSV FILE SELECTOR");
        rulesPath.setFileFilter(filter);
        rulesPath.setApproveButtonText("Accept");
        rulesPath.setMultiSelectionEnabled(false);
        rulesPath.setAcceptAllFileFilterUsed(false);
        rulesPath.setToolTipText("RULES CSV FILE SELECTOR");
        rulesPath.setFileSelectionMode(JFileChooser.FILES_ONLY);

        int result = rulesPath.showOpenDialog(null);
        if( result == JFileChooser.APPROVE_OPTION){
            jFTFRuleInf.setText(String.valueOf(rulesPath.getSelectedFile()));

            if( !jFTFEmails.getText().isEmpty() &&
                !jFTESched1.getText().isEmpty() &&
                !jFTESched2.getText().isEmpty() &&
                !jFTFRuleInf.getText().isEmpty()){
                loadButton.setEnabled(true);
            }else loadButton.setEnabled(false);
        }
    }//GEN-LAST:event_bEvalOrderActionPerformed

    private void bEmailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEmailsActionPerformed
        // TODO add your handling code here:
        JFileChooser emailsPath = new JFileChooser(".");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV File", "csv");
        emailsPath.setDialogTitle("EMAIL CSV FILE SELECTOR");
        emailsPath.setFileFilter(filter);
        emailsPath.setApproveButtonText("Accept");
        emailsPath.setMultiSelectionEnabled(false);
        emailsPath.setAcceptAllFileFilterUsed(false);
        emailsPath.setToolTipText("EMAIL CSV FILE SELECTOR");
        emailsPath.setFileSelectionMode(JFileChooser.FILES_ONLY);

        int result = emailsPath.showOpenDialog(null);
        if( result == JFileChooser.APPROVE_OPTION){
            jFTFEmails.setText(String.valueOf(emailsPath.getSelectedFile()));

            if( !jFTFEmails.getText().isEmpty() &&
                !jFTESched1.getText().isEmpty() &&
                !jFTESched2.getText().isEmpty() &&
                !jFTFRuleInf.getText().isEmpty())
            {
                loadButton.setEnabled(true);
            }else loadButton.setEnabled(false);
        }
    }//GEN-LAST:event_bEmailsActionPerformed

    private void minCPUTimeConsumptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minCPUTimeConsumptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minCPUTimeConsumptionActionPerformed

    private void clearSchedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearSchedButtonActionPerformed
        // TODO add your handling code here:
        DefaultListModel<String> selectedModel;
        DefaultListModel<String> listModel = (DefaultListModel<String>)allSchedulers1.getModel();
        
        if(schedulerSelected.getModel() instanceof DefaultListModel){
            selectedModel = (DefaultListModel<String>)schedulerSelected.getModel();
            selectedModel.removeAllElements();
        }

        removeSchedButton.setEnabled(true);
        addSchedButton.setEnabled(true);
        saveSchedButton.setEnabled(true);
        jFTESched1.setText("");
        jFTESched2.setText("");
    }//GEN-LAST:event_clearSchedButtonActionPerformed

    private void removeSchedButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeSchedButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeSchedButton1ActionPerformed

    private void addSchedButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSchedButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addSchedButton1ActionPerformed

    private void saveSchedButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSchedButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveSchedButton1ActionPerformed

    private void clearSchedButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearSchedButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clearSchedButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SchedulerBench.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        //java.awt.EventQueue.invokeLater(() -> {
            SchedulerBench bench = new SchedulerBench();
            bench.setLocationRelativeTo(null);
            bench.setVisible(true);
        //});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CPUTimeConsumptionPanel;
    private javax.swing.JPanel CPUTimeConsumptionPanel1;
    private javax.swing.JPanel CPUTimeConsumptionPanel2;
    private javax.swing.JPanel IOTimeConsumptionPanel;
    private javax.swing.JPanel IOTimeConsumptionPanel1;
    private javax.swing.JTextField SFEPercentage;
    private javax.swing.JTextField SFEPercentage1;
    private javax.swing.JTextField UnexecutedRulesPercentage;
    private javax.swing.JTextField UnexecutedRulesPercentage1;
    private javax.swing.JButton addSchedButton;
    private javax.swing.JButton addSchedButton1;
    private javax.swing.JList allSchedulers1;
    private javax.swing.JTextField avgCPUTimeConsumption;
    private javax.swing.JTextField avgCPUTimeConsumption1;
    private javax.swing.JTextField avgIOTimeConsumption;
    private javax.swing.JTextField avgIOTimeConsumption1;
    private javax.swing.JButton bEmails;
    private javax.swing.JButton bEvalOrder;
    private javax.swing.JButton bSched1;
    private javax.swing.JButton clearSchedButton;
    private javax.swing.JButton clearSchedButton1;
    private javax.swing.JPanel comparisonBenchmarker;
    private javax.swing.JTextField cpuLocksTimeConsumption;
    private javax.swing.JTextField cpuLocksTimeConsumption1;
    private javax.swing.JPanel dataSelector;
    private javax.swing.JTable emailSummaryTable;
    private javax.swing.JScrollPane emailsScrollPanel;
    private javax.swing.JTable emailsTable;
    private javax.swing.JPanel executeBenchmarker;
    private javax.swing.JPanel executeBenchmarker2;
    private javax.swing.JPanel executeSimulatorPanel;
    private javax.swing.JButton generatePlotsButton;
    private javax.swing.JTextField globalCPUTimeConsumption;
    private javax.swing.JTextField globalCPUTimeConsumption1;
    private javax.swing.JPanel inputDataPanel;
    private javax.swing.JTextPane jFTESched1;
    private javax.swing.JTextPane jFTESched2;
    private javax.swing.JFormattedTextField jFTFEmails;
    private javax.swing.JFormattedTextField jFTFRequiredScore;
    private javax.swing.JFormattedTextField jFTFRuleInf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelSched1;
    private javax.swing.JLabel jLabelSched1_1;
    private javax.swing.JLabel jLabelSched2;
    private javax.swing.JLabel jLabelSched2_1;
    private javax.swing.JTextPane jOutputText;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTree jTree1;
    private javax.swing.JLabel lEmails;
    private javax.swing.JLabel lEvalOrder;
    private javax.swing.JLabel lLoadedEmails;
    private javax.swing.JLabel lLoadedPlugins;
    private javax.swing.JLabel lLoadedRules;
    private javax.swing.JLabel lRequiredScore;
    private javax.swing.JLabel lRuleInf;
    private javax.swing.JLabel labelCPUs;
    private javax.swing.JButton loadButton;
    private javax.swing.JTextField loadedEmails;
    private javax.swing.JTextField loadedPlugins;
    private javax.swing.JTextField loadedRules;
    private javax.swing.JTextField maxCPUTimeConsumption;
    private javax.swing.JTextField maxCPUTimeConsumption1;
    private javax.swing.JTextField maxIOTimeConsumption;
    private javax.swing.JTextField maxIOTimeConsumption1;
    private javax.swing.JTextField minCPUTimeConsumption;
    private javax.swing.JTextField minCPUTimeConsumption1;
    private javax.swing.JTextField minIOTimeConsumption;
    private javax.swing.JTextField minIOTimeConsumption1;
    private javax.swing.JComboBox numCpus;
    private javax.swing.JPanel outputDataPanel;
    private javax.swing.JPanel plotPanel;
    private javax.swing.JPanel plotPanel2;
    private javax.swing.JPanel plotPanel3;
    private javax.swing.JButton pluginCloseButton;
    private javax.swing.JTable pluginTable;
    private javax.swing.JButton removeSchedButton;
    private javax.swing.JButton removeSchedButton1;
    private javax.swing.JButton rulesCloseButton;
    private javax.swing.JTable rulesTable;
    private javax.swing.JButton saveSchedButton;
    private javax.swing.JButton saveSchedButton1;
    private javax.swing.JTextField sched1Filter;
    private javax.swing.JTextField sched2Filter;
    private javax.swing.JFrame schedulerFilter;
    private javax.swing.JFrame schedulerList;
    private javax.swing.JList schedulerSelected;
    private javax.swing.JList schedulerSelected1;
    private javax.swing.JFrame schedulerTree;
    private javax.swing.JPanel sfeActivations;
    private javax.swing.JPanel sfeActivations1;
    private javax.swing.JPanel sfeActivations2;
    private javax.swing.JButton showPluginsButton;
    private javax.swing.JFrame showPluginsFrame;
    private javax.swing.JButton showRulesButton;
    private javax.swing.JFrame showRulesFrame;
    private javax.swing.JPanel showRulesPanel;
    private javax.swing.JTextPane sumTotalCPUTimeConsumption;
    private javax.swing.JTextPane sumTotalCPUTimeConsumption1;
    private javax.swing.JTextPane sumTotalIOTimeConsumption;
    private javax.swing.JTextPane sumTotalIOTimeConsumption1;
    private javax.swing.JTextPane sumTotalLockTime;
    private javax.swing.JTextPane sumTotalLockTime1;
    private javax.swing.JTextPane sumTotalSFEExecutions;
    private javax.swing.JTextPane sumTotalSFEExecutions1;
    private javax.swing.JTextPane sumTotalUnexecutedRules;
    private javax.swing.JTextPane sumTotalUnexecutedRules1;
    private javax.swing.JPanel summaryDataPanel;
    private javax.swing.JPanel summaryPanel;
    private javax.swing.JPanel summaryPanel2;
    private javax.swing.JPanel summaryPanel3;
    private javax.swing.JTextField totalCPUTimeConsumption;
    private javax.swing.JTextField totalCPUTimeConsumption1;
    private javax.swing.JTextField totalIOTimeConsumption;
    private javax.swing.JTextField totalIOTimeConsumption1;
    private javax.swing.JTextField totalSFEActivations;
    private javax.swing.JTextField totalSFEActivations1;
    private javax.swing.JTextField totalUnexecutedRules;
    private javax.swing.JTextField totalUnexecutedRules1;
    private javax.swing.JLabel uvigoLogo;
    // End of variables declaration//GEN-END:variables
}
